Imports System.Text.RegularExpressions 'Imports the library which allows regex comparisons
Imports System.IO 'Imports the library which allows file handling

Module Module1

    Sub Main()
        Dim list As New List(Of String) 'The list to which all of the offending registration plates will be saved
        Dim limit As Integer = 60 'The speed limit in miles per hour
        Dim cont As String = "Y" 'The variable who's assignment will determine whether the program will loop again 
        Dim reg As String 'The registration which will be saved to 'list' in the event that it's speed exceeds the limit
        Dim random As New Random 'The random number generator which will provide the vehicle's time spent in the speed trap
        Dim rndNo As Integer 'The integer version of 'random'
        Dim speed As Single 'The veicle's speed calculated using 'rndNo'
        Dim time As TimeSpan ''rndNo' as hours
        Dim check As New Regex("^[A-Z]{2}\d{2} [A-Z]{3}$") 'The regex string which the registration plate the user enters will be checked against

        Using writer As StreamWriter = New StreamWriter("speeding_file.txt", True) 'The streamwriter whaich will write the list to a file at the end of the program

            While cont = "Y" 'Checks 'cont' to decide to loop or not
                Console.WriteLine("Enter the registration plate") 'Asks the user to enter a registration plate
                reg = Console.ReadLine() 'Saves the user's input as 'reg'
                Debug.Print(reg) 'Prints 'reg' to the debug log for testing purposes

                rndNo = random.Next(400000000, 800000001) 'Generates a random number between 400000000 and 800000001. The large numbers are needed due to it being converted to nanoseconds
                Debug.Print(rndNo) 'Prints 'rndNo' to the debug log for testing purposes
                time = New TimeSpan(rndNo) 'Assigns 'time' to the value of 'rndNo' in order to convert to hours
                speed = 1 / time.TotalHours 'Assigns 'speed' the value of 1(the distance of the speed trap) divided by the time converted to hours

                Dim speed2 As Single = Math.Round(speed, 1) 'Rounds 'speed' to 1dp in order to make it more easilly readable and less processor intensive
                Console.WriteLine("speed is " & Math.Round(speed, 1)) 'Prints the rounded speed to the console
                Debug.Print("speed2 is " & speed2) 'Prints 'speed2' to the debug log for testing purposes

                reg = reg.ToUpper() 'changes the registration plate entered by the user to uppercase in order to check against the regex string
                Dim match As Match = check.Match(reg) 'The variable which will be used to check if the regex statement matches the reg entered

                If speed2 > limit And match.Success = True Then 'Compares the rounded speed to 'limit' and matches the regex
                    Dim reader As New StreamReader("P:\dataTable.csv") 'Opens the rader which will read the lines from the data file

                    While reader.Peek <> -1 'Loops if there are still unread lines in the csv file
                        Dim tempReg As New Regex(reg) 'Dimensions the registration plate as a regex string in order to search for a match in the file
                        Dim inputStr As String = "" 'Dimensions a variable which will be the current line being read in br the StreamReader
                        Dim spltArr() As String 'Dimensions a 1D array which will be used to store the split line

                        inputStr = reader.ReadLine() 'Assigns 'inputStr' the value of the line being currently read
                        Debug.Print(inputStr) 'Prints the read in line to the debug log for testing purposes
                        spltArr = inputStr.Split(",") 'Splits the line at the commas
                        Debug.Print(spltArr(0)) 'Prints the 0 value of 'splitArr' to the debug log for testing purposes

                        Dim tempMatch As Match = tempReg.Match(spltArr(0)) 'The variable which will be used to check if the registration matches the reg of the line currently being read
                        If tempMatch.Success Then 'If the reg matches the one being read...

                            Console.ForegroundColor = ConsoleColor.Red 'Sets the console foreground colour to red
                            Console.WriteLine("SPEEDING!") 'Prints to the console that the vehicle is speeding
                            Console.ForegroundColor = ConsoleColor.White 'Sets the console foreground colour to white

                            Dim listWriter As String = "" 'Dimensions a variable which will be used to 'stitch together' the split line
                            listWriter = spltArr(0) & " was travelling: " & speed2 - limit & " mph over the speed limt (60 mph) and belongs to " & spltArr(1) & " " & spltArr(2) & " of " & _
                            spltArr(3) & ", " & spltArr(4) & ", " & spltArr(5) & ", " & spltArr(6) & ", " & spltArr(7) & ", " & spltArr(8)
                            'Assigns 'listWriter' the string which will be written to the file
                            list.Add(listWriter) 'Adds the value of 'listWriter' to the list which will be written to the file.

                        ElseIf speed > limit And match.Success = False Then 'If the vehicle is speeding but is not on the list of vehicles
                            Console.WriteLine("Speeding by " & speed - limit & " mph, but registration does not feature on list.") 'Prints the contents of the brackets

                        ElseIf speed < limit And match.Success = True Then 'If the vehicle is not speeding but features on the list
                            Console.WriteLine("Vehicle veatures on the list but is not speeding") 'Prints the contents of the brackets

                        Else 'If no conditions are met
                            Console.WriteLine("Vehicle does not feature on the list, nor is it speeding") 'Prints the contents of the brackets
                        End If

                    End While
                    reader.Close() 'Closes the reader which allow it to be reused in the next itteration
                End If

                Console.WriteLine("Would you like to continue? (Y/N)") 'Outputs to the console asking the user if they would like to continue
                cont = Console.ReadLine().ToUpper 'Assigns 'cont' the value the user has entered
            End While

            Console.WriteLine("The speeding list is:") 'Outputs to the console informing that the following is the list of vehicles speeding

            For Each item In list 'Loops a number of times equal to the number of items in 'list'
                Console.WriteLine(item) 'Prints the current item in the list
                writer.WriteLine(item) 'Writes the current item to the file
            Next
        End Using
        Console.WriteLine("Press enter to quit") 'Outputs to the console informing the user that the program has ended and tels them how to quit.
        Console.ReadLine()

    End Sub

End Module
